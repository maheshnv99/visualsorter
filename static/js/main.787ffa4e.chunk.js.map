{"version":3,"sources":["motivator/motivator.js","visualiser/sortingalgorithms.js","visualiser/sortingvisualiser.js","App.js","serviceWorker.js","index.js"],"names":["Motivator","props","getquotes","axios","get","then","response","quote","data","en","author","setState","quotes","catch","error","console","log","state","this","className","React","Component","quicksortalgorithm","array","animations","quick","low","high","p","animation","i","pivot","j","k","push","temp","index","partition","length","heapsortalgorithm","n","Math","floor","heapify","heap","largest","l","r","Sortingvisualiser","resetarray","random","changealgorithm","event","algorithm","target","value","visualise","mergesort","quicksort","heapsort","selectionsort","bubblesort","insertionsort","preventDefault","inuse","bars","document","getElementsByClassName","baroneidx","bartwoidx","isnotequal","baronestyle","style","bartwostyle","setTimeout","backgroundColor","backgroundcolor","baronenewheight","height","bartwonewheight","minidx","animate","selectionsortalgorithm","isswap","key","insertionsortalgorithm","bubblesortalgorithm","bgcolor","type","onChange","onClick","map","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.787ffa4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport './motivator.css';\r\nclass Motivator extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        quotes:\"\",\r\n        author:\"\"\r\n    };\r\n}\r\ncomponentDidMount(){\r\n    this.getquotes();\r\n}\r\ngetquotes=()=>{\r\n    axios.get(\"https://programming-quotes-api.herokuapp.com/quotes/random\")\r\n    .then((response)=>{\r\n        const quote= response.data.en;\r\n        const {author}=response.data;\r\n    this.setState({\r\n        quotes:quote,\r\n        author:author\r\n    })\r\n    \r\n    \r\n    }).catch((error)=>{console.log(error)})\r\n    \r\n    \r\n\r\n}\r\n    render() {\r\n    const {quotes}=this.state;\r\n    const {author}=this.state;    \r\n    return (\r\n        <div className=\"Quotesdisplay\">\r\n            <h2 className=\"Quote\">Qoute of the day:<br /><br />\"{quotes}\"<br /><br />-{author}</h2>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\nexport default Motivator;","export function mergesortalgorithm(array){\r\n    const animations=[];\r\n    merge(array,animations);\r\n    return animations;\r\n }; \r\nfunction merge(a,animations){\r\nif(a.length>1){\r\n    let mid=Math.floor(a.length/2);\r\n    const l=[];\r\n    const r=[];\r\n    for(let q=0;q<mid;q++){\r\n        l.push(a[q]);\r\n    }\r\n    for(let w=mid;w<a.length;w++){\r\n        r.push(a[w]);\r\n    }\r\n    merge(l,animations);\r\n    merge(r,animations);\r\n    let i=0,j=0,k=0;\r\n    while (i<l.length && j<r.length){\r\n            if (l[i]<r[j]){\r\n                animations.push([k,i]);\r\n                a[k]=l[i];\r\n                i=i+1;\r\n            }\r\n            else{\r\n                animations.push([k,j]);\r\n                a[k]=r[j];\r\n                j=j+1;\r\n            }\r\nk=k+1;\r\n    }\r\n    while(i<l.length){\r\n        animations.push([k,i]);\r\n        a[k]=l[i];\r\n        i=i+1;\r\n        k=k+1;\r\n\r\n    }\r\n    while(i<r.length){\r\n        animations.push([k,j]);\r\n                a[k]=r[j];\r\n                j=j+1;\r\n                k=k+1;\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n}\r\nexport function bubblesortalgorithm(array){\r\n// const duparray=[];\r\nconst animation=[];\r\n\r\nfor(let i=0;i<array.length-1;i++){\r\n    for(let j=0;j<array.length-i-1;j++){\r\n        \r\n        const animations=[j,j+1,0];\r\n        if (array[j]>array[j+1]){\r\n            animations[2]=1;\r\n            let temp=array[j];\r\n            array[j]=array[j+1];\r\n            array[j+1]=temp;\r\n\r\n        }\r\n        animation.push(animations);\r\n    }\r\n\r\n}\r\nreturn animation;\r\n\r\n\r\n\r\n}\r\nexport function selectionsortalgorithm(array){\r\n    \r\nconst animation=[];\r\nfor (let i=0;i<array.length;i++){\r\n    let minidx=i;\r\nfor (let j=i+1;j<array.length;j++){\r\n\r\n    if(array[minidx]>array[j])\r\n   {\r\n       minidx=j;\r\n   } \r\n\r\n\r\n}\r\nconst animate=[i,minidx,0];\r\nif (i!=minidx){\r\n    animate[2]=1;\r\n    let temp=array[i];\r\n    array[i]=array[minidx];\r\n    array[minidx]=temp;\r\n\r\n\r\n}\r\nanimation.push(animate);\r\n}\r\nreturn animation\r\n\r\n\r\n}\r\nexport function insertionsortalgorithm(array){\r\nconst animation=[];\r\nfor(let i=1;i<array.length;i++){\r\nlet key=array[i];\r\nlet j=i-1;\r\nwhile(j>=0 && key<array[j]){\r\n    array[j+1]=array[j];\r\n    animation.push([j+1,j,0]);\r\n    j=j-1;\r\n   \r\n}\r\narray[j+1]=key;\r\nif (j+1!=i){\r\n animation.push([j+1,key,1])   \r\n}\r\n\r\n\r\n\r\n}\r\n\r\nreturn animation;\r\n\r\n\r\n\r\n}\r\nfunction partition(array,low,high){\r\n    \r\n    let animation=[];\r\n    let i=low-1;\r\n    let pivot=array[high];\r\n    for(let j=low;j<high;j++){\r\n        if(array[j]<=pivot){\r\n\r\n            i=i+1;\r\n            let k= (i!=j)?1:0;\r\n            animation.push([i,j,k]);\r\n            let temp=array[i];\r\n            array[i]=array[j];\r\n            array[j]=temp;\r\n        }\r\n\r\n\r\n    }\r\n    let k=(i+1!=high)?1:0;\r\n    animation.push([i+1,high,k])\r\n    let temp=array[i+1];\r\n    array[i+1]=array[high];\r\n    array[high]=temp;\r\n    let animate={\r\n        animations:animation,\r\n        index:i+1\r\n    };\r\n    return animate;\r\n\r\n\r\n}\r\nfunction quick(array,low,high,animations){\r\n\r\n    if(low<high){\r\n        let p=partition(array,low,high);\r\n        for(let i=0;i<p.animations.length;i++){\r\n            animations.push(p.animations[i]);\r\n        }\r\n        \r\n        quick(array,low,p.index-1,animations)\r\n        quick(array,p.index+1,high,animations)\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\nexport function quicksortalgorithm(array){\r\nconst animations=[];\r\nquick(array,0,array.length-1,animations);\r\nreturn animations;\r\n\r\n}\r\nexport function heapsortalgorithm(array){\r\nconst animations=[];\r\nheap(array,animations);\r\nreturn animations;\r\n\r\n}\r\nfunction heap(array,animations){\r\n    let n=array.length;\r\n    for(let i=Math.floor(n/2)-1;i>-1;i--){\r\n        heapify(array,n,i,animations);\r\n    }\r\n    for(let i=n-1;i>0;i--){\r\n        animations.push([i,0])\r\n        let temp=array[i];\r\n        array[i]=array[0];\r\n        array[0]=temp;\r\n        heapify(array,i,0,animations);\r\n    }\r\n\r\n\r\n\r\n}\r\nfunction heapify(array,n,i,animations){\r\nlet largest=i;\r\nlet l=2*i+1;\r\nlet r=2*i+2;\r\nif(l<n && array[i]<array[l]){\r\n    largest=l;\r\n}\r\nif(r<n && array[largest]<array[r]){\r\n    largest=r;\r\n}\r\nif(largest!=i){\r\n    animations.push([i,largest]);\r\n    let temp=array[i];\r\n    array[i]=array[largest];\r\n    array[largest]=temp;\r\n    heapify(array,n,largest,animations)\r\n\r\n}\r\n   \r\n\r\n}","import React from 'react';\r\nimport './sortingvisualiser.css';\r\nimport Motivator from '../motivator/motivator';\r\n\r\nimport {bubblesortalgorithm,selectionsortalgorithm,insertionsortalgorithm,quicksortalgorithm,heapsortalgorithm,} from  './sortingalgorithms.js';\r\n\r\n\r\nclass Sortingvisualiser extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        array:[],\r\n        algorithm:\"quicksort\",\r\n        inuse:1,\r\n    };\r\n}\r\nresetarray=()=>{\r\n    const array=[];\r\n    for(let i=0;i<=150;i++){\r\n    array.push(Math.floor(Math.random()*(530-5+1)+5))\r\n    }\r\n    this.setState({array});\r\n}\r\ncomponentDidMount(){\r\n\r\n    this.resetarray();\r\n}\r\n \r\nquicksort(){\r\nconst animation=quicksortalgorithm(this.state.array);\r\nconst bars=document.getElementsByClassName(\"bars\");\r\nfor(let i=0;i<animation.length;i++){\r\n    const [baroneidx,bartwoidx,isnotequal]=animation[i];\r\n    const baronestyle=bars[baroneidx].style;\r\n    const bartwostyle=bars[bartwoidx].style;\r\n    if(isnotequal){\r\n        \r\n        setTimeout(()=>{\r\n           \r\n            baronestyle.backgroundColor=\"red\";\r\n            bartwostyle.backgroundcolor=\"red\";\r\n    \r\n    \r\n        const baronenewheight=bartwostyle.height;\r\n        const bartwonewheight=baronestyle.height;\r\n        baronestyle.height=baronenewheight;\r\n            bartwostyle.height=bartwonewheight;\r\n        setTimeout(()=>{\r\n            baronestyle.backgroundColor=\"#304847\";\r\n            bartwostyle.backgroundColor=\"#304847\";},i*3);\r\n        \r\n\r\n       \r\n    },i*30);\r\n   \r\n    }\r\n    else{\r\n\r\n        setTimeout(()=>{\r\n           \r\n            baronestyle.backgroundColor=\"green\";\r\n            bartwostyle.backgroundcolor=\"green\";\r\n    \r\n    \r\n        const baronenewheight=bartwostyle.height;\r\n        const bartwonewheight=baronestyle.height;\r\n        baronestyle.height=baronenewheight;\r\n            bartwostyle.height=bartwonewheight;\r\n        setTimeout(()=>{\r\n            baronestyle.backgroundColor=\"#304847\";\r\n            bartwostyle.backgroundColor=\"#304847\";},i*3);\r\n        \r\n\r\n       \r\n    },i*30);\r\n\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\n}\r\nselectionsort(){\r\n    const animation=selectionsortalgorithm(this.state.array);\r\n    \r\n    for(let i=0;i<animation.length;i++){\r\n        const bars=document.getElementsByClassName(\"bars\");\r\n        const [baroneidx,bartwoidx,isswap]=animation[i];\r\n        const baronestyle=bars[baroneidx].style;\r\n        const bartwostyle=bars[bartwoidx].style;\r\n        if(isswap){\r\n            \r\n            setTimeout(()=>{\r\n           \r\n                baronestyle.backgroundColor=\"red\";\r\n                bartwostyle.backgroundcolor=\"red\";\r\n        \r\n        \r\n            const baronenewheight=bartwostyle.height;\r\n            const bartwonewheight=baronestyle.height;\r\n            baronestyle.height=baronenewheight;\r\n                bartwostyle.height=bartwonewheight;\r\n            setTimeout(()=>{\r\n                baronestyle.backgroundColor=\"#304847\";\r\n                bartwostyle.backgroundColor=\"#304847\";},i*3);\r\n            \r\n    \r\n           \r\n        },i*30);\r\n       \r\n\r\n        }\r\n        else{\r\n            \r\n            setTimeout(()=>{\r\n            \r\n                baronestyle.backgroundColor=\"green\";\r\n                bartwostyle.backgroundcolor=\"green\"; \r\n                \r\n            setTimeout(()=>{ baronestyle.backgroundColor=\"#304847\";\r\n            bartwostyle.backgroundColor=\"#304847\";\r\n                },i*3);\r\n               \r\n            },i*30);\r\n            \r\n\r\n        }\r\n        \r\n        \r\n\r\n\r\n    }\r\n   \r\n    } \r\n\r\n    \r\ninsertionsort()\r\n\r\n    {\r\n        const animation=insertionsortalgorithm(this.state.array);\r\n    \r\n    for(let i=0;i<animation.length;i++){\r\n            const bars=document.getElementsByClassName(\"bars\");\r\n            const [baroneidx,bartwoidx,isswap]=animation[i];\r\n       \r\n            if(isswap){\r\n                const baronestyle=bars[baroneidx].style;\r\n                setTimeout(()=>{\r\n           \r\n                    baronestyle.backgroundColor=\"green\";\r\n                \r\n                \r\n        \r\n            \r\n                    baronestyle.height=`${bartwoidx}px`;\r\n                \r\n                    setTimeout(()=>{\r\n                            baronestyle.backgroundColor=\"#304847\";\r\n                                    },i*1);\r\n            \r\n    \r\n           \r\n                    },i*3);\r\n       \r\n\r\n            }\r\n            else{\r\n                    const baronestyle=bars[baroneidx].style;\r\n                    const bartwostyle=bars[bartwoidx].style;\r\n            \r\n                    setTimeout(()=>{\r\n           \r\n                            baronestyle.backgroundColor=\"red\";\r\n                \r\n        \r\n        \r\n                            const baronenewheight=bartwostyle.height;\r\n            \r\n                            baronestyle.height=baronenewheight;\r\n            \r\n                            setTimeout(()=>{\r\n                                    baronestyle.backgroundColor=\"#304847\";\r\n                            },i*1);\r\n            \r\n    \r\n           \r\n                    },i*3);\r\n                }\r\n    \r\n        }\r\n    } \r\n  \r\n    \r\nheapsort(){\r\n    const animation=heapsortalgorithm(this.state.array);\r\n    const bars=document.getElementsByClassName(\"bars\");\r\n    for(let i=0;i<animation.length;i++){\r\n        const [baroneidx,bartwoidx]=animation[i];\r\n        const baronestyle=bars[baroneidx].style;\r\n        const bartwostyle=bars[bartwoidx].style;\r\n       \r\n            \r\n            setTimeout(()=>{\r\n               \r\n                baronestyle.backgroundColor=\"red\";\r\n                bartwostyle.backgroundcolor=\"red\";\r\n        \r\n        \r\n            const baronenewheight=bartwostyle.height;\r\n            const bartwonewheight=baronestyle.height;\r\n            baronestyle.height=baronenewheight;\r\n                bartwostyle.height=bartwonewheight;\r\n            setTimeout(()=>{\r\n                baronestyle.backgroundColor=\"#304847\";\r\n                bartwostyle.backgroundColor=\"#304847\";},i*3);\r\n            \r\n    \r\n           \r\n        },i*20);\r\n       \r\n        \r\n       \r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nbubblesort(){\r\n    const animation=bubblesortalgorithm(this.state.array);\r\n    for(let i=0;i<animation.length;i++){\r\n        const bars=document.getElementsByClassName(\"bars\");\r\n        const [baroneidx,bartwoidx,isswap]=animation[i];\r\n        const baronestyle=bars[baroneidx].style;\r\n        const bartwostyle=bars[bartwoidx].style;\r\n        if(isswap){\r\n            \r\n            setTimeout(()=>{\r\n           \r\n                baronestyle.backgroundColor=\"red\";\r\n                bartwostyle.backgroundcolor=\"red\";\r\n        \r\n        \r\n            const baronenewheight=bartwostyle.height;\r\n            const bartwonewheight=baronestyle.height;\r\n            baronestyle.height=baronenewheight;\r\n                bartwostyle.height=bartwonewheight;\r\n            setTimeout(()=>{\r\n                baronestyle.backgroundColor=\"#304847\";\r\n                bartwostyle.backgroundColor=\"#304847\";},i*3);\r\n            \r\n    \r\n           \r\n        },i*1.5);\r\n       \r\n\r\n        }\r\n        else{\r\n            \r\n            setTimeout(()=>{\r\n            \r\n                baronestyle.backgroundColor=\"green\";\r\n                bartwostyle.backgroundcolor=\"green\"; \r\n                \r\n            setTimeout(()=>{ baronestyle.backgroundColor=\"#304847\";\r\n            bartwostyle.backgroundColor=\"#304847\";\r\n                },i*3);\r\n               \r\n            },i*1.5);\r\n            \r\n\r\n        }\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\nchangealgorithm=(event)=>{\r\nthis.setState({\r\n    algorithm: event.target.value\r\n})\r\n\r\n\r\n\r\n}\r\nvisualise=(event)=>{\r\n    const k=this.state.algorithm;\r\n    if(k==\"mergesort\")this.mergesort();\r\n    else if(k==\"quicksort\")this.quicksort();\r\n    else if(k==\"heapsort\")this.heapsort();\r\n    else if(k==\"selectionsort\")this.selectionsort();\r\n    else if(k==\"bubblesort\")this.bubblesort();\r\n    else if(k==\"insertionsort\")this.insertionsort();\r\n\r\n    event.preventDefault();\r\n}\r\n    render() {\r\n        const {array}=this.state;\r\n        return (<div className=\"barsbox\">\r\n                \r\n                <div >\r\n                   {/* <button className=\"button\"onClick={this.resetarray}>Generator</button> */}\r\n                    <table className=\"navbarr\" bgcolor=\"#404040\"><tr className=\"navbarr\" >\r\n                    \r\n                   \r\n                        <td>\r\n                        <form ><span className=\"lg-col-3  p-3 m-2 sm-col-12 p-3 m-4\"><button className=\"btn btn-secondary generator\" type=\"submit\">Generator</button></span></form>\r\n                        \r\n                            <form  ><span className=\"lg-col-4 p-3 m-4 sm-col-5 m-3\"> <label className=\"label\" >Algorithm:</label>\r\n                                <select value={this.state.algorithm} onChange={this.changealgorithm}> \r\n                                    {/* <option value=\"mergesort\">Merge Sort</option> */}\r\n                                    <option value=\"quicksort\">Quick Sort</option>\r\n                                    <option value=\"heapsort\">Heap Sort</option>\r\n                                    <option value=\"selectionsort\">Selection Sort</option>\r\n                                    <option value=\"bubblesort\">Bubble Sort</option>\r\n                                    <option value=\"insertionsort\">Insertion Sort</option>\r\n\r\n                                </select></span>\r\n                                <span >\r\n                                <button  className=\"btn btn-secondary lg-lg-col-4 p-2 m-3 sm-col-12 p-2 m-3\"  onClick={this.visualise}>Sort</button>\r\n                                </span>\r\n                            \r\n\r\n                        </form>\r\n\r\n                                </td></tr></table>\r\n                      \r\n                            \r\n                                                  \r\n              \r\n                        \r\n\r\n\r\n                </div>\r\n                <div className=\"sortarea\">\r\n                {\r\n                   array.map((value,index)=>\r\n                   <div className=\"bars\" key={index} \r\n                   style={{height:`${value}px`}}>\r\n\r\n                        {}\r\n\r\n                   </div>)} \r\n\r\n\r\n                </div>\r\n                <div><Motivator /></div>\r\n               \r\n                  \r\n            </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\n\r\n// #endregion\r\n\r\nexport default Sortingvisualiser;","import React from 'react';\n\nimport './App.css';\nimport Sortingvisualiser from './visualiser/sortingvisualiser';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sortingvisualiser />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}